select rows where
	. the phone starts w 91
	. the name is not empty
fdf=df.dropna(subset=[‘name’])
fdf=fdf[fdf[‘phone’].str.startswith(’91’)]

filter rows where the name contains the substring bhaiya
haha
fdf=df[df[‘name’].str.contains(‘bhaiya’)]
add a coloumn to indicate where the phone is missing
for i, r in df.iterrows():
	if df[‘phone’]~NaN:
		df[‘phone_exist’]=true;
	else:
		df[‘phone_exist’]=false;
ORRR (i guess the only issue is i dont know how ot handle phone != NaN in python)
df[‘phone_exist’]=df[df[‘phone’]!=NaN] ???
fiter out rows where phone number is atleast 11 characters
fdf=df[df[‘phone’].str.length() < 11] i guess thats how it should work? thats what happens in c++, not sure about python lol


#######################
20 jan - Aash
2 sept- Vikas
26 nov- Prakhar
23 oct- Vaibhav Shrivastava
16 march- Himanshu
19 nov- susu
25 march- kavin
6 june- Pranav
Dev -1 march
Gurshan-3 jan
Yash-18 feb
A|zafar- 27 nov
Vaibhav sharma- 17 may
Moni-10 may
Pranay-8 nov
Prakhar- 26 nov
22 feb- Yuvraj
3 sept- Deepak
1 sept- Lakshya( A1)
Naksha-1 sept
Aaryan rana- 18 june
19 april- dhruv( A2)
Parikshit- 10 may
12 may- Lakshya
lshaan- 18 Sept
Rahul B6- 5 Aug
Madhav- 5 oct
Krishna-1 oct
Divyam jain- 26 July
Suryakant- 19 nov
Aditya b5- 30 jan
Hardik- 20 feb
Aditya B7- 20 Aug
lshaan- 24 July
Abhay(ishaan roommate)- 10 jan
Vaibhav sharma- 17 may
Anshuman-17 jan
Yuvraj- 22 feb
Vinayak- 24 june
Gurshan- 3 jan
Himanshu- 16 march
Bhavya- 9 march
Ujjain aditya- 20 june
Sivaji- 26 Dec
lshaa - 24 July
Harit- 14 July
Devansh(A8)- Jan 1
Shashwat- 21 Dec
Prianshu jwa|a- 4 July
Nikhi|-25 july
Naitik- 27 march
Dheeraj- 24 Dec
2 oct- Kartik